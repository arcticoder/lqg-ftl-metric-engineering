{"task":"Test analyze_energy_distribution output","priority":"High","depends_on":"","source_file":"C:\\Users\\sherri3\\Code\\asciimath\\lqg-ftl-metric-engineering\\energy_optimization\\energy_component_analyzer.py","source_file_lines":"151:201","source_snippet":"def analyze_energy_distribution(self) -> Dict[str, Any]:\n        \"\"\"Analyze current energy distribution and identify optimization targets\"\"\"","python_snippet":"import numpy as np\nfrom energy_optimization.energy_component_analyzer import EnergyComponentAnalyzer\n# instantiate and run analysis\ne = EnergyComponentAnalyzer()\nr = e.analyze_energy_distribution()\n# basic structure checks\nassert 'components' in r and 'spacetime_curvature' in r['components']\n# spot-check one componentâ€™s recoverable energy\ne_expected = 2.7e9 - 2.7e9 * 0.12\nassert np.isclose(r['components']['spacetime_curvature']['recoverable_energy'], e_expected, atol=1e3)", "source_snippet":"def soliton_ansatz(self, variable: str = 'r', soliton_type: 'tanh', num_solitons: int = 1) -> sp.Expr:","test_file":"lqg-ftl-metric-engineering/tests/test_energy_component_analyzer.py"}
